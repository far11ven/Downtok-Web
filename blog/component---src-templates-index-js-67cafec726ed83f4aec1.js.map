{"version":3,"sources":["webpack:///./src/templates/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_common__WEBPACK_IMPORTED_MODULE_1__","_components_common_meta__WEBPACK_IMPORTED_MODULE_2__","Index","_ref","data","location","pageContext","posts","allGhostPost","edges","a","createElement","Fragment","isHome","className","map","_ref2","node","key","id","post"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KA+CeU,UAhCD,SAAAC,GAAqC,IAAlCC,EAAkCD,EAAlCC,KAAMC,EAA4BF,EAA5BE,SAAUC,EAAkBH,EAAlBG,YACvBC,EAAQH,EAAKI,aAAaC,MAEhC,OACIX,EAAAY,EAAAC,cAAAb,EAAAY,EAAAE,SAAA,KACId,EAAAY,EAAAC,cAACV,EAAA,EAAD,CAAUI,SAAUA,IACpBP,EAAAY,EAAAC,cAACX,EAAA,EAAD,CAAQa,QAAQ,GACZf,EAAAY,EAAAC,cAAA,OAAKG,UAAU,aACXhB,EAAAY,EAAAC,cAAA,KAAGG,UAAU,QAAb,kBACAhB,EAAAY,EAAAC,cAAA,WAASG,UAAU,aACdP,EAAMQ,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAEPnB,EAAAY,EAAAC,cAACX,EAAA,EAAD,CAAUkB,IAAKD,EAAKE,GAAIC,KAAMH,OAGtCnB,EAAAY,EAAAC,cAACX,EAAA,EAAD,CAAYM,YAAaA,QAqBtC,IAAMV,EAAS","file":"component---src-templates-index-js-67cafec726ed83f4aec1.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { graphql } from \"gatsby\";\r\n\r\nimport { Layout, PostCard, Pagination } from \"../components/common\";\r\nimport { MetaData } from \"../components/common/meta\";\r\n\r\n/**\r\n * Main index page (home page)\r\n *\r\n * Loads all posts from Ghost and uses pagination to navigate through them.\r\n * The number of posts that should appear per page can be setup\r\n * in /utils/siteConfig.js under `postsPerPage`.\r\n *\r\n */\r\nconst Index = ({ data, location, pageContext }) => {\r\n    const posts = data.allGhostPost.edges;\r\n\r\n    return (\r\n        <>\r\n            <MetaData location={location} />\r\n            <Layout isHome={true}>\r\n                <div className=\"container\">\r\n                    <p className=\"lead\">Recent posts..</p>\r\n                    <section className=\"post-feed\">\r\n                        {posts.map(({ node }) => (\r\n                            // The tag below includes the markup for each post - components/common/PostCard.js\r\n                            <PostCard key={node.id} post={node} />\r\n                        ))}\r\n                    </section>\r\n                    <Pagination pageContext={pageContext} />\r\n                </div>\r\n            </Layout>\r\n        </>\r\n    );\r\n};\r\n\r\nIndex.propTypes = {\r\n    data: PropTypes.shape({\r\n        allGhostPost: PropTypes.object.isRequired\r\n    }).isRequired,\r\n    location: PropTypes.shape({\r\n        pathname: PropTypes.string.isRequired\r\n    }).isRequired,\r\n    pageContext: PropTypes.object\r\n};\r\n\r\nexport default Index;\r\n\r\n// This page query loads all posts sorted descending by published date\r\n// The `limit` and `skip` values are used for pagination\r\nexport const pageQuery = graphql`\r\n    query GhostPostQuery($limit: Int!, $skip: Int!) {\r\n        allGhostPost(\r\n            sort: { order: DESC, fields: [published_at] }\r\n            limit: $limit\r\n            skip: $skip\r\n        ) {\r\n            edges {\r\n                node {\r\n                    ...GhostPostFields\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n"],"sourceRoot":""}