{"componentChunkName":"component---src-templates-post-js","path":"/github-pages-a-comprehensive-guide-w-images-part-2/","webpackCompilationHash":"076274619e12b3099b35","result":{"data":{"ghostPost":{"id":"Ghost__Post__5e22bdec47638e0001d8298a","title":"GitHub Pages — A Comprehensive guide w/ images (Part 2)","slug":"github-pages-a-comprehensive-guide-w-images-part-2","featured":false,"feature_image":"https://digitalpress.fra1.cdn.digitaloceanspaces.com/omtmgjm/2020/01/4.jpg","excerpt":"Recently I started building my personal website as everyone is building one for themselves these days. I got a cool TLD (.xyz), and that is","custom_excerpt":"Recently I started building my personal website as everyone is building one for themselves these days. I got a cool TLD (.xyz), and that is","created_at_pretty":"18 January, 2020","published_at_pretty":"12 January, 2020","updated_at_pretty":"12 March, 2020","created_at":"2020-01-18T08:12:28.000+00:00","published_at":"2020-01-12T08:10:00.000+00:00","updated_at":"2020-03-12T15:42:10.000+00:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Kushal Bhalaik","slug":"kushal","bio":null,"profile_image":null,"twitter":null,"facebook":null,"website":null}],"primary_author":{"name":"Kushal Bhalaik","slug":"kushal","bio":null,"profile_image":null,"twitter":null,"facebook":null,"website":null},"primary_tag":{"name":"GitHub","slug":"github","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"GitHub","slug":"github","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"This is part 2 of the article series GitHub Pages — A Comprehensive guide w/\nimages\n[https://blog.kushalbhalaik.xyz/github-pages-a-comprehensive-guide-w-images-part-1]\n\nRecently I started building my personal website [https://kushalbhalaik.xyz/] as\neveryone is building one for themselves these days. I got a cool TLD (.xyz), and\nthat is the only money I wanted to spend. Since then I’ve been looking for ways\nto host it without any costs.\n\n\n--------------------------------------------------------------------------------\n\nIn part 1\n[https://blog.kushalbhalaik.xyz/github-pages-a-comprehensive-guide-w-images-part-1] \nof this series we saw how to publish GitHub User Pages and how to link it with\ncustom-domain.In this article we’ll see how to have more than one Github Pages\nper account (Yes, it is possible). Commençons!!\n\n> Before proceeding make sure you already have a repository\n<your_username>.github.io\nSetting up Multiple Github Pages:\nLet’s create a new repository:\n\n 1. Goto Github.new [http://www.github.new/] and fill out the new repository\n    details, I’ll call it “demo”:\n\nRepository creation flow on GitHubNote: It is important to keep this repository\npublic\n2. Now goto repository settings:\n\n3. On Settings page, scroll down to Github Pages section:\n\nGitHub Repo Settings Page4. Make the repository Public, if you see following\nmessage:\n\nMaking Repository Public on GitHub5. Once repository is Public GitHub Pages will become enabled for the current\nrepository\n\nGitHub Pages options6. Click on None, then view current options: we can either choose following\noptions:\n\n 1. Using “master” branch of demo repository for publishing GitHub pages (Like\n    in GitHub User Pages)\n 2. Using /docs page under “master” branch for publishing GitHub Pages\n 3. We’ll be using gh-pages branch option which is currently not available as \n    gh-pages branch doesn’t exist for demo repository as of yet\n\nBy default None is selected for GitHub Pages7. Copy the demo repository link:\n\nCopying repository link from GitHub8. Now clone the repo to local machine: Here, <far11ven>\n[unsafe:javascript:void(0)] is my GitHub username\n\n~$ git clone https://github.com/far11ven/demo.git\n\n9. Create local gh-pages branch and push it to GitHub:\n\n~$ cd demo\n~$ git branch gh-pages\n~$ git push remote -u origin gh-pages\n\n10. Go back to demo settings on GitHub and select gh-pages as source for\npublishing:\n\nSelecting gh-pages branchAfter this step whatever you put in gh-pages branch will be automatically\npublished.\n\n11. Let’s create a simple index.html file within this repository:\n\n~$ echo \"Hello gh-pages!!\" > index.html\n\n12. Add, commit and push your changes to GithHub remote:\n\n13. You can see in your browser demo repository has been published\n\n“demo” page published under GitHub User page> You will have a main GitHub User\nPage (One per account) <username>.github.io and all other repos will be\npublished as sub pages\n\nor,\n\nif you have already linked a custom-domain to your GitHub User Page, the n you\ncan see the published page at www.example.com/<your-repo-name> in my case demo \nrepo will be published at far11ven.github.io/demo\nSetting up custom-domains:\n\ni) Setting up Github Pages as a domain\nTo have our subpages be listed as demo page we need to do following changes in\nour GitHub repo and our Domain provider\n\n 1. Create a CNAME file in your repository: I will be doing it via GitHub UI,\n    just create a CNAME file (with no extension) and just enter your sub-domain\n    name inside it, nothing else. in my case, I want to make demo pages appear\n    as your-website.com\n\nCNAME File contentOnce Done, commit your changes.\n\nAdding CNAME to repositoryAfter Adding CNAME to repo2.  Add a new DNS record on\nyour DNS provider: We need to change existing CNAME records to point to created\nGitHub pages i.e. .github.io\n\nAdding new CNAME DNS record on Cloudflareii) Setting up Github Pages as a\nsub-domain:\nTo have our subpages be listed as demo page we need to do following changes in\nour GitHub repo and our Domain provider\n\n 1. Create or Edit an existing CNAME file in your repository: I will be doing it\n    via GitHub UI, in my case, there is already a CNAME File so I ‘ll just edit\n    the existing file and replace everything in it with my sub-domain, nothing\n    else. in my case, I want to make demo pages appear as demo.kushalbhalaik.xyz\n\nUpdated CNAME File ContentOnce Done, commit your changes.\n\nEditing CNAME file in RepositoryAfter Adding CNAME to repo2. Add a new DNS\nrecord on your DNS provider for existing Domain: We need to change existing\nCNAME records to point to created GitHub pages i.e. .github.io\n\nImportant Points:\n * Again, at this point, nothing needs to be done from our end, we need to wait\n   for changes to reflect on both GitHub and Cloudflare end, Which may take some\n   time (usually its prompt) but may take some time based on your DNS provider\n * You won’t be able to access your pages via <username>.github.io, or\n   <username>.github.io/<your-repo> in case you try and enter this in browser,\n   you’ll be redirected to your custom domain or custom sub-domain\n * Your can-not add multiple GitHub Pages as a sub-doman to GitHub User Page i.e \n   demo.far11ven.github.io in my case is not a valid url\n\nFinal Result:\nWe have successfully created a sub-domain to host our another github-page,\nfollow these steps to create even more pages within your website.\n\nGitHub pages published under a sub-domainCheers!!\n\nOriginal article on: \nhttps://blog.kushalbhalaik.xyz/github-pages-a-comprehensive-guide-w-images-part-2","html":"<p>This is part 2 of the article series <a href=\"https://blog.kushalbhalaik.xyz/github-pages-a-comprehensive-guide-w-images-part-1\">GitHub Pages — A Comprehensive guide w/ images</a></p><p>Recently I started building my personal <a href=\"https://kushalbhalaik.xyz/\">website</a> as everyone is building one for themselves these days. I got a cool TLD (.xyz), and that is the only money I wanted to spend. Since then I’ve been looking for ways to host it without any costs.</p><hr><p>In <a href=\"https://blog.kushalbhalaik.xyz/github-pages-a-comprehensive-guide-w-images-part-1\">part 1</a> of this series we saw how to publish GitHub User Pages and how to link it with custom-domain.In this article we’ll see how to have more than one Github Pages per account (Yes, it is possible). <em>Commençons!!</em></p><blockquote><em><em>Before proceeding make sure you already have a repository &lt;your_username&gt;.github.io</em></em></blockquote><h1 id=\"setting-up-multiple-github-pages-\">Setting up Multiple Github Pages:</h1><p>Let’s create a new repository:</p><ol><li>Goto <a href=\"http://www.github.new/\">Github.new</a> and fill out the new repository details, I’ll call it <em>“<strong>demo</strong>”</em>:</li></ol><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://cdn-images-1.medium.com/max/1782/1*PzfpUhBsr5iJi5Q7QRK7Nw.png\" class=\"kg-image\" alt=\"Repository creation flow on GitHub\"><figcaption>Repository creation flow on GitHub</figcaption></figure><h3 id=\"note-it-is-important-to-keep-this-repository-public\"><em>Note: It is important to keep this repository public</em></h3><p>2. Now goto repository settings:</p><figure class=\"kg-card kg-image-card\"><img src=\"https://cdn-images-1.medium.com/max/2030/1*b5bPuFazwfRwghdXnAVjIg.png\" class=\"kg-image\"></figure><p>3. On Settings page, scroll down to <strong>Github Pages</strong> section:</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://cdn-images-1.medium.com/max/2096/1*8yAgZCpugVwjaXM4eKXn7w.png\" class=\"kg-image\" alt=\"GitHub Repo Settings Page\"><figcaption>GitHub Repo Settings Page</figcaption></figure><p>4. Make the repository Public, if you see following message:</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://cdn-images-1.medium.com/max/2474/1*ylp1_d_vkORpLPyClx_JAA.png\" class=\"kg-image\" alt=\"Making Repository Public on GitHub\"><figcaption>Making Repository Public on GitHub</figcaption></figure><p>5. Once repository is Public <strong><em>GitHub Pages</em></strong> will become enabled for the current repository</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://cdn-images-1.medium.com/max/2030/1*8Y6mLRtnTRzIe3WmzTmgPA.png\" class=\"kg-image\" alt=\"GitHub Pages options\"><figcaption>GitHub Pages options</figcaption></figure><p>6. Click on <strong>None</strong>, then view current options: we can either choose following options:</p><ol><li>Using “master” branch of demo repository for publishing GitHub pages (Like in GitHub <strong>User Pages</strong>)</li><li>Using /docs page under “master” branch for publishing GitHub Pages</li><li>We’ll be using <strong>gh-pages</strong> branch option which is currently not available as <strong>gh-pages </strong>branch doesn’t exist for <strong><em>demo </em></strong>repository as of yet</li></ol><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://cdn-images-1.medium.com/max/1672/1*Ck5_flCgHvQ1dc2GpbeRSQ.png\" class=\"kg-image\" alt=\"By default None is selected for GitHub Pages\"><figcaption>By default None is selected for GitHub Pages</figcaption></figure><p>7. Copy the <strong><em>demo </em></strong>repository link:</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://cdn-images-1.medium.com/max/2160/1*MYtVHN0W5VgMej0DXKA9fg.png\" class=\"kg-image\" alt=\"Copying repository link from GitHub\"><figcaption>Copying repository link from GitHub</figcaption></figure><p>8. Now clone the repo to local machine: Here, <strong><a href=\"unsafe:javascript:void(0)\">&lt;far11ven&gt;</a> is my GitHub username</strong></p><pre><code>~$ git clone https://github.com/far11ven/demo.git</code></pre><p>9. Create local <strong>gh-pages </strong>branch and push it to GitHub:</p><pre><code>~$ cd demo\n~$ git branch gh-pages\n~$ git push remote -u origin gh-pages</code></pre><p>10. Go back to <strong><em>demo </em></strong>settings on GitHub and select <strong>gh-pages</strong> as source for publishing:</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://cdn-images-1.medium.com/max/1698/1*weFkH-xTZ-jYPsMeEfqbFA.png\" class=\"kg-image\"><figcaption>Selecting gh-pages branch</figcaption></figure><p>After this step whatever you put in <strong>gh-pages</strong> branch will be automatically published.</p><p>11. Let’s create a simple <strong>index.html</strong> file within this repository:</p><pre><code>~$ echo \"Hello gh-pages!!\" &gt; index.html</code></pre><p>12. Add, commit and push your changes to GithHub remote:</p><p>13. You can see in your browser <strong>demo </strong>repository has been published</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://cdn-images-1.medium.com/max/1302/1*WhTtLYp5oPJm8ye_b5jglg.png\" class=\"kg-image\" alt=\"“demo” page published under GitHub User page\"><figcaption>“demo” page published under GitHub User page</figcaption></figure><blockquote>You will have a main GitHub User Page (One per account) <strong><em><strong>&lt;username&gt;</strong></em>.github.io</strong> and all other repos will be published as sub pages<br><br>or,<br><br>if you have already linked a custom-domain to your GitHub User Page, the n you can see the published page at <strong>www.example.com<em><strong>/&lt;your-repo-name&gt;</strong> </em></strong>in my case <strong>demo </strong>repo will be published at <strong>far11ven.github.io/demo</strong></blockquote><h1 id=\"setting-up-custom-domains-\">Setting up custom-domains:<br></h1><h3 id=\"i-setting-up-github-pages-as-a-domain\">i) Setting up Github Pages as a domain</h3><p>To have our subpages be listed as demo page we need to do following changes in our GitHub repo and our Domain provider</p><ol><li>Create a <strong>CNAME </strong>file in your repository: I will be doing it via GitHub UI, just create a <strong>CNAME </strong>file (with no extension) and just enter your sub-domain name inside it, nothing else. in my case, I want to make <strong>demo </strong>pages appear as <strong><em>your-website.com</em></strong></li></ol><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://cdn-images-1.medium.com/max/2618/1*gEHiZyGl4ahG1Pzof-Q99A.png\" class=\"kg-image\" alt=\"CNAME File content\"><figcaption>CNAME File content</figcaption></figure><p>Once Done, commit your changes.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://cdn-images-1.medium.com/max/2032/0*YoWI7xR6nMUVX4gz.png\" class=\"kg-image\" alt=\"Adding CNAME to repository\"><figcaption>Adding CNAME to repository</figcaption></figure><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://cdn-images-1.medium.com/max/2184/1*H59ALuDL9jcNg5o9Ll7z1A.png\" class=\"kg-image\" alt=\"After Adding CNAME to repo\"><figcaption>After Adding CNAME to repo</figcaption></figure><p>2.  Add a new DNS record on your DNS provider: We need to change existing CNAME records to point to created GitHub pages i.e. <strong><em>.github.io</em></strong></p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://cdn-images-1.medium.com/max/2620/1*FFgsmzUt4eV_r0MhCxAslw.png\" class=\"kg-image\" alt=\"Adding new CNAME DNS record on Cloudflare\"><figcaption>Adding new CNAME DNS record on Cloudflare</figcaption></figure><h3 id=\"ii-setting-up-github-pages-as-a-sub-domain-\">ii) Setting up Github Pages as a sub-domain:</h3><p>To have our subpages be listed as demo page we need to do following changes in our GitHub repo and our Domain provider</p><ol><li>Create or Edit an existing <strong>CNAME </strong>file in your repository: I will be doing it via GitHub UI, in my case, there is already a CNAME File so I ‘ll just edit the existing file and replace everything in it with my sub-domain, nothing else. in my case, I want to make <strong>demo </strong>pages appear as <strong><em>demo.kushalbhalaik.xyz</em></strong></li></ol><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://cdn-images-1.medium.com/max/2234/1*FxyNYdcrL9TbOiA7uhYT-g.png\" class=\"kg-image\" alt=\"CNAME File Content\"><figcaption>Updated CNAME File Content</figcaption></figure><p>Once Done, commit your changes.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://cdn-images-1.medium.com/max/2584/1*Wu67RaNVR96RrX-NYkr0YQ.png\" class=\"kg-image\" alt=\"Editing CNAME file in Repository\"><figcaption>Editing CNAME file in Repository</figcaption></figure><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://cdn-images-1.medium.com/max/2184/1*H59ALuDL9jcNg5o9Ll7z1A.png\" class=\"kg-image\" alt=\"After Adding CNAME to repo\"><figcaption>After Adding CNAME to repo</figcaption></figure><p>2. Add a new DNS record on your DNS provider for existing Domain: We need to change existing CNAME records to point to created GitHub pages i.e. <strong><em>.github.io</em></strong></p><figure class=\"kg-card kg-image-card\"><img src=\"https://cdn-images-1.medium.com/max/2092/1*xYlbopBao6uHGWPlScKDEA.png\" class=\"kg-image\" alt=\"Adding new CNAME DNS record on Cloudflare\"></figure><h3 id=\"important-points-\">Important Points:</h3><ul><li>Again, at this point, nothing needs to be done from our end, we need to wait for changes to reflect on both GitHub and Cloudflare end, Which may take some time (usually its prompt) but may take some time based on your DNS provider</li><li>You won’t be able to access your pages via <strong><strong><em><em>&lt;username&gt;.github.io, or &lt;username&gt;.github.io/&lt;your-repo&gt;</em></em></strong><em> </em></strong>in case you try and enter this in browser, you’ll be redirected to your custom domain or custom sub-domain</li><li>Your can-not add multiple GitHub Pages as a sub-doman to <strong>GitHub User Page </strong>i.e <em>demo.far11ven.github.io</em> in my case is not a valid url</li></ul><h3 id=\"final-result-\">Final Result:</h3><p>We have successfully created a sub-domain to host our another github-page, follow these steps to create even more pages within your website.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://cdn-images-1.medium.com/max/1202/1*VptsVQstgH05Bm_OFdfhzQ.png\" class=\"kg-image\" alt=\"GitHub pages published under a sub-domain\"><figcaption>GitHub pages published under a sub-domain</figcaption></figure><p><em>Cheers!!</em></p><p><strong>Original article on</strong>: <a href=\"https://blog.kushalbhalaik.xyz/github-pages-a-comprehensive-guide-w-images-part-2\">https://blog.kushalbhalaik.xyz/github-pages-a-comprehensive-guide-w-images-part-2</a></p>","url":"https://admin.kushalbhalaik.xyz/github-pages-a-comprehensive-guide-w-images-part-2/","uuid":"3c35d349-e802-4d5c-84eb-c00d83d6b99b","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5e22bdec47638e0001d8298a"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"github-pages-a-comprehensive-guide-w-images-part-2"}}}