{"componentChunkName":"component---src-templates-post-js","path":"/github-pages-a-comprehensive-guide-w-images-part-1/","webpackCompilationHash":"076274619e12b3099b35","result":{"data":{"ghostPost":{"id":"Ghost__Post__5e22b9d647638e0001d8292b","title":"GitHub Pages — A Comprehensive guide w/ images (Part 1)","slug":"github-pages-a-comprehensive-guide-w-images-part-1","featured":false,"feature_image":"https://digitalpress.fra1.cdn.digitaloceanspaces.com/omtmgjm/2020/01/3.jpg","excerpt":"Recently I started building my personal website as everyone is building for themselves these days. I got a cool TLD (.xyz), and that is","custom_excerpt":"Recently I started building my personal website as everyone is building for themselves these days. I got a cool TLD (.xyz), and that is","created_at_pretty":"18 January, 2020","published_at_pretty":"11 January, 2020","updated_at_pretty":"12 March, 2020","created_at":"2020-01-18T07:55:02.000+00:00","published_at":"2020-01-11T07:54:00.000+00:00","updated_at":"2020-03-12T15:42:26.000+00:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Kushal Bhalaik","slug":"kushal","bio":null,"profile_image":null,"twitter":null,"facebook":null,"website":null}],"primary_author":{"name":"Kushal Bhalaik","slug":"kushal","bio":null,"profile_image":null,"twitter":null,"facebook":null,"website":null},"primary_tag":{"name":"GitHub","slug":"github","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"GitHub","slug":"github","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"\n\nRecently I started building my personal website [https://kushalbhalaik.xyz/] as\neveryone is building for themselves these days. I got a cool TLD (.xyz), and\nthat is the only money I wanted to spend. Since then I’ve been looking for ways\nto host it without any costs.\n\n\n--------------------------------------------------------------------------------\n\nI’ve tried different host providers such as Heroku [http://www.heroku.com/], \n000webhost [http://www.000webhost.com/] so far, which are good options. My\nwebsite is vastly static pages so far until I figure out how to have a cms such\nas Ghost [http://www.ghost.org/] to be integrated with Gatsby\n[http://www.gatsbyjs.org/] for adding content periodically (Of course for free).\nAnyways I thought if my site is mostly static pages so why not give Github Pages\na try (it’s been on my list for a quite sometime now) and along the way I\nencountered various hurdles and there wasn’t an elaborate article around it. So\nfolks here we are :)\n\nThis is part 1 of this article series, part 2 can be found here\n[https://medium.com/@kushalbhalaik/github-pages-a-comprehensive-guide-w-images-part-2-94c7a6b8d65b]\n. Enchanté.\n\nSetting up Github Pages:\nThis is the most straight forward thing, it’s all neatly illustrated here on \nGithub Pages [https://pages.github.com/], but as this article‘s name suggests\nI’m bound:\n\nWe’ll start by creating a repository on Github:\n\n 1. Goto Github.new [https://github.com/new/], a cooler way to create Github\n    repositories (You’ll see).\n\nMake sure your repo-name is .github.io The pages ending with .github.io are\ncalled User Pages, where could belong to an individual or an organization\n\nRepository creation flow on GitHubNote: It is important to make your repository\nPublic, in order for your GitHub User pages to be accessible to all\n\n> We won’t be creating any other branch, because User Pages require to be built\nfrom master branch. And in this article, we won’t use Jekyll to publish our\npages.\n 1. First clone the repo to local machine: Here, <username\n    [unsafe:javascript:void(0)]> is GitHub username\n\n~$ git clone https://github.com/username/username.github.io.git\n\n 1. Create an index.html file inside this repository:\n\n~$ cd username.github.io\n\n~$ echo “Hello World!!” > index.html\n\n 1. Add, commit and push your changes to Github remote:\n\n~$ git add *\n\n~$ git commit -m \"Initial commit\"\n\n~$ git push -u origin master\n\n 1. Type {<username>.github.io } in browser and you’re done publishing your\n    first website to github pages.\n\nBrowser screenshot of deployed Github pages\n--------------------------------------------------------------------------------\n\nSetting up Github Pages on your custom-domain:\nWe have successfully created and deployed Github Pages. But I want users to\nvisit my custom domain kushalbhalaik.xyz. Lets link’em up:\n\n 1. Created a CNAME file in your repository: I will be doing it via GitHub UI,\n    just create a CNAME file (with no extension) and just enter your domain name\n    inside it, nothing else.\n\nOnce Done, commit your changes.\n\nAdding CNAME file to repository 1. Change DNS records on your DNS provider: We\n    need to change existing CNAME records to point to created github pages i.e. \n    <username>.github.io\n\nChanging CNAME records on CloudflareImportant Points:\n * At this point, nothing needs to be done from our end, we need to wait for\n   changes to reflect on both GitHub and Cloudflare end, Which may take some\n   time (usually its prompt) but may take some time based on your DNS provider\n * You won’t be able to access your pages via .github.io, in case you try and\n   enter this in browser, you’ll be redirected to your custom domain\n\nGithub Page deployed on custom-domainSo this was all to get you started with\nyour very own Github Pages (User). In Part 2 of this series we’ll be taking\ndeeper look into gh-pages and linking pages to your sub-domain.\n\nPart 2 is now available here\n[https://blog.kushalbhalaik.xyz/github-pages-a-comprehensive-guide-w-images-part-2/]\n. Happy Building!!\n\nOriginal article on: \nhttps://blog.kushalbhalaik.xyz/github-pages-a-comprehensive-guide-w-images-part-1","html":"<p></p><p>Recently I started building my personal <a href=\"https://kushalbhalaik.xyz/\">website</a> as everyone is building for themselves these days. I got a cool TLD (.xyz), and that is the only money I wanted to spend. Since then I’ve been looking for ways to host it without any costs.</p><hr><p>I’ve tried different host providers such as <a href=\"http://www.heroku.com/\">Heroku</a>, <a href=\"http://www.000webhost.com/\">000webhost</a> so far, which are good options. My website is vastly static pages so far until I figure out how to have a cms such as <a href=\"http://www.ghost.org/\">Ghost</a> to be integrated with <a href=\"http://www.gatsbyjs.org/\">Gatsby</a> for adding content periodically (Of course for free). Anyways I thought if my site is mostly static pages so why not give Github Pages a try (it’s been on my list for a quite sometime now) and along the way I encountered various hurdles and there wasn’t an elaborate article around it. So folks here we are :)</p><p>This is part 1 of this article series, part 2 can be found <a href=\"https://medium.com/@kushalbhalaik/github-pages-a-comprehensive-guide-w-images-part-2-94c7a6b8d65b\">here</a>. <em>Enchanté</em>.</p><h1 id=\"setting-up-github-pages-\">Setting up Github Pages:</h1><p>This is the most straight forward thing, it’s all neatly illustrated here on <a href=\"https://pages.github.com/\">Github Pages</a>, but as this article‘s name suggests I’m bound:</p><p>We’ll start by creating a repository on Github:</p><ol><li>Goto <a href=\"https://github.com/new/\">Github.new</a>, a cooler way to create Github repositories (You’ll see).</li></ol><p>Make sure your repo-name is .github.io The pages ending with <strong>.github.io</strong> are called <strong>User Pages</strong>, where could belong to an individual or an organization</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://cdn-images-1.medium.com/max/1698/1*0Ozb5XoyfFn7DWZspAYuAg.png\" class=\"kg-image\" alt=\"Repository creation flow on GitHub\"><figcaption>Repository creation flow on GitHub</figcaption></figure><h3 id=\"note-it-is-important-to-make-your-repository-public-in-order-for-your-github-user-pages-to-be-accessible-to-all\"><em>Note: It is important to make your repository Public, in order for your GitHub User pages to be accessible to all</em><br></h3><blockquote>We won’t be creating any other branch, because<strong> User Pages</strong> require to be built from master branch. And in this article, we won’t use <strong>Jekyll </strong>to publish our pages.</blockquote><figure class=\"kg-card kg-image-card\"><img src=\"https://cdn-images-1.medium.com/max/1558/1*no0kc3rdol3SWujmpJVKYg.png\" class=\"kg-image\"></figure><ol><li>First clone the repo to local machine: Here, <strong><em>&lt;<a href=\"unsafe:javascript:void(0)\">username</a>&gt;</em> is GitHub username</strong></li></ol><pre><code>~$ git clone https://github.com/username/username.github.io.git</code></pre><ol><li>Create an <strong><em>index.html</em></strong> file inside this repository:</li></ol><pre><code>~$ cd username.github.io\n\n~$ echo “Hello World!!” &gt; index.html</code></pre><ol><li>Add, commit and push your changes to Github remote:</li></ol><pre><code>~$ git add *\n\n~$ git commit -m \"Initial commit\"\n\n~$ git push -u origin master</code></pre><ol><li>Type {<strong><em>&lt;username&gt;.github.io </em></strong>} in browser and you’re done publishing your first website to github pages.</li></ol><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://cdn-images-1.medium.com/max/1022/1*XOuM4EPcUp2T2pOOniPaYw.png\" class=\"kg-image\" alt=\"Browser screenshot of deployed Github pages\"><figcaption>Browser screenshot of deployed Github pages</figcaption></figure><hr><h1 id=\"setting-up-github-pages-on-your-custom-domain-\">Setting up Github Pages on your custom-domain:</h1><p>We have successfully created and deployed Github Pages. But I want users to visit my custom domain <em><strong>kushalbhalaik.xyz</strong>. </em>Lets link’em up:</p><ol><li>Created a CNAME file in your repository: I will be doing it via GitHub UI, just create a <strong>CNAME </strong>file (with no extension) and just enter your domain name inside it, nothing else.</li></ol><figure class=\"kg-card kg-image-card\"><img src=\"https://cdn-images-1.medium.com/max/2052/1*pfBeNgjpAmuqIhBOQTgNHg.png\" class=\"kg-image\"></figure><p>Once Done, commit your changes.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://cdn-images-1.medium.com/max/2032/1*_M1dh61vJyblyI6DX-m1CA.png\" class=\"kg-image\" alt=\"Adding CNAME file to repository\"><figcaption>Adding CNAME file to repository</figcaption></figure><ol><li>Change DNS records on your DNS provider: We need to change existing CNAME records to point to created github pages i.e. <strong><strong><em><em>&lt;username&gt;.github.io</em></em></strong></strong></li></ol><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://cdn-images-1.medium.com/max/2116/1*RYZ6ZpXYVQmdEgXPqxGXuw.png\" class=\"kg-image\" alt=\"Changing CNAME records on Cloudflare\"><figcaption>Changing CNAME records on Cloudflare</figcaption></figure><h2 id=\"important-points-\">Important Points:</h2><ul><li>At this point, nothing needs to be done from our end, we need to wait for changes to reflect on both GitHub and Cloudflare end, Which may take some time (usually its prompt) but may take some time based on your DNS provider</li><li>You won’t be able to access your pages via <strong><em>.github.io, </em></strong>in case you try and enter this in browser, you’ll be redirected to your custom domain</li></ul><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://cdn-images-1.medium.com/max/1022/1*towqw7uQT_WHQ6TPsPsDMg.png\" class=\"kg-image\" alt=\"Github Page deployed on custom-domain\"><figcaption>Github Page deployed on custom-domain</figcaption></figure><p>So this was all to get you started with your very own Github Pages (User). In Part 2 of this series we’ll be taking deeper look into <strong><em>gh-pages</em></strong> and linking pages to your sub-domain.</p><p>Part 2 is now available <a href=\"https://blog.kushalbhalaik.xyz/github-pages-a-comprehensive-guide-w-images-part-2/\">here</a>. <em>Happy Building!!</em></p><p><strong><strong>Original article on</strong></strong>: <a href=\"https://blog.kushalbhalaik.xyz/github-pages-a-comprehensive-guide-w-images-part-1\" rel=\"noopener nofollow\">https://blog.kushalbhalaik.xyz/github-pages-a-comprehensive-guide-w-images-part-1</a></p>","url":"https://admin.kushalbhalaik.xyz/github-pages-a-comprehensive-guide-w-images-part-1/","uuid":"d6b32945-a680-47b7-981e-283ef7c4e4a0","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5e22b9d647638e0001d8292b"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"github-pages-a-comprehensive-guide-w-images-part-1"}}}