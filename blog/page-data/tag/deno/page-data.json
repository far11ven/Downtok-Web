{"componentChunkName":"component---src-templates-tag-js","path":"/tag/deno/","webpackCompilationHash":"076274619e12b3099b35","result":{"data":{"ghostTag":{"slug":"deno","name":"Deno","visibility":"public","feature_image":null,"description":null,"meta_title":null,"meta_description":null},"allGhostPost":{"edges":[{"node":{"id":"Ghost__Post__5e47e4121f0c8f0001d72ee3","title":"Getting started with Deno","slug":"getting-started-with-deno","featured":false,"feature_image":"https://digitalpress.fra1.cdn.digitaloceanspaces.com/omtmgjm/2020/02/Deno1-1.PNG","excerpt":"Deno is a secure runtime for Javascript & Typescript (right out of the box) just like Nodejs is a runtime for Javascript. Deno was created by same guy who created Nodejs i.e. Ryan Dahl","custom_excerpt":"Deno is a secure runtime for Javascript & Typescript (right out of the box) just like Nodejs is a runtime for Javascript. Deno was created by same guy who created Nodejs i.e. Ryan Dahl","created_at_pretty":"15 February, 2020","published_at_pretty":"15 February, 2020","updated_at_pretty":"12 March, 2020","created_at":"2020-02-15T12:29:06.000+00:00","published_at":"2020-02-15T13:46:20.000+00:00","updated_at":"2020-03-12T15:41:54.000+00:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Kushal Bhalaik","slug":"kushal","bio":null,"profile_image":null,"twitter":null,"facebook":null,"website":null}],"primary_author":{"name":"Kushal Bhalaik","slug":"kushal","bio":null,"profile_image":null,"twitter":null,"facebook":null,"website":null},"primary_tag":{"name":"Deno","slug":"deno","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Deno","slug":"deno","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"In this article, I'm going to show you how to get started with Deno\n[https://deno.land/]- A secure runtime for JavaScript and TypeScript. We'll see\nInstallation of Deno, Hello World program and setting up an http-server.\n\n\n--------------------------------------------------------------------------------\n\nThe What?\n\nDeno [https://deno.land/]is a secure runtime for Javascript & Typescript (right\nout of the box) just like Nodejs is a runtime for Javascript. Deno was created\nby same guy who created Nodejs i.e. Ryan Dahl.\n\n\nDeno aims to improve what Ryan Dahl thinks he should've done with Nodejs like:\n\nDeno aims to improve what's wrong with NodejsThings Deno offers out of the box\nInstalling Deno.\n\nThere are few options available on official site deno.land/ [https://deno.land/]\n.\n\nWe are gonna install it using Power-shell command:\n\niwr https://deno.land/x/install/install.ps1 -useb | iex\n\nMessage after Deno is successfully installedThe Deno.exe  executable file is\nstored in C:\\Users\\<username>\\.deno\\bin\\deno.exe by default.\n\n> \nIn macOS or Linux $HOME/.local/bin\n\nFollowing command will give info about Deno, V8 Engine & Typescript version\ninstalled on your machine.\n\ndeno --version\n\nDeno versionsHello World - Writing first program with Deno.\n\nOpen up your terminal and just type following:\n\ndeno https://deno.land/std/examples/welcome.ts\n\nwill result into:\n\nExecuting a remote .ts fileWhat happened here is we execute a code present in a\nremote file, AWESOME!!\n\nContent of https://deno.land/std/examples/welcome.tsNow let's execute a local\ncode:\n\nCreate a file inside \"C:\\deno\" > index.ts (it could have .js extension for a\njavascript file)\n\nOpening index.ts in Visual Studio CodeNow using terminal execute following\ncommand:\n\ndeno index.ts\n\nor\n\ndeno index.js\n\nHello World!! with index.tsHello World!! with index.jsSetting up an http-server.\nDeno provides an http-server i.e. \n\nhttps://deno.land/std@v0.30.0/http/server.ts\n\nAs provided on official website example, here's how you can create a running\nserver on your machine:\n\nCode:\n\nimport { serve } from \"https://deno.land/std@v0.30.0/http/server.ts\";\n\nconst s = serve({ port: 5000 });\n\nconsole.log(\"Listening on http://localhost:5000/\");\n\nfor await (const req of s) {\n  req.respond({ body: \"Hello World!!\" });\n}\n\n\njust copy paste above code into your \"index.ts\" file and run it with following\ncommand.\n\ndeno -A index.ts\n\n> -A flag provides all the necessary permission for your app to run on your\nmachine\n\n\nGET request on server running on localhost:5000Using Oak middle-ware with deno\nhttp-server.\n\nOak is a middleware framework for Deno's net server, more on this can be found\non GitHub repo: https://github.com/oakserver/oak\n\n\nNOW let's create a GET & POST endpoint by altering our \"index.ts\" code with\nfollowing:\n\nimport { Application, Router } from \"https://deno.land/x/oak/mod.ts\";\n\nconst router = new Router();\n\nrouter.get(\"/\", context => {\n  context.response.body = \"Hello World!\";\n});\n\nrouter.post(\"/\", context => {\n  context.response.body = \"You have made a POST request!\";\n});\n\nconst app = new Application();\n\napp.use(router.routes());\napp.use(router.allowedMethods());\n\nconst server = app.listen({ port: 5000 });\n\nconsole.log(\"Listening on http://localhost:5000/\");\n\nHere we are spinning of an http server with OakResult:\n\nGET request on server running on localhost:5000POST request on server running on\nlocalhost:5000So, that was it regarding installing Deno, writing first\n'Hello-World\" program and setting up an http-server along with Oak middleware.\n\n\nResources: \nDeno – a better Node.js? | Krzysztof Piechowicz : \nhttps://www.youtube.com/watch?v=mzfw9TwBiQc&t=616s\n[https://www.youtube.com/watch?v=mzfw9TwBiQc&t=616s]\n\nDeno Examples: https://deno.land/#example\n\nOak Middleware: https://github.com/oakserver/oak\n\n\nOriginal article on: https://blog.kushalbhalaik.xyz/getting-started-with-deno/","html":"<p>In this article, I'm going to show you how to get started with <a href=\"https://deno.land/\">Deno </a>- A secure runtime for JavaScript and TypeScript. We'll see Installation of Deno, Hello World program and setting up an http-server.</p><hr><h2 id=\"the-what\">The What?</h2><p><br><a href=\"https://deno.land/\">Deno </a>is a secure runtime for Javascript &amp; Typescript (right out of the box) just like Nodejs is a runtime for Javascript. Deno was created by same guy who created Nodejs i.e. Ryan Dahl.<br></p><p>Deno aims to improve what Ryan Dahl thinks he should've done with Nodejs like:</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://digitalpress.fra1.cdn.digitaloceanspaces.com/omtmgjm/2020/02/image.png\" class=\"kg-image\"><figcaption>Deno aims to improve what's wrong with Nodejs</figcaption></figure><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://digitalpress.fra1.cdn.digitaloceanspaces.com/omtmgjm/2020/02/image-1.png\" class=\"kg-image\"><figcaption>Things Deno offers out of the box</figcaption></figure><h2 id=\"installing-deno-\">Installing Deno.<br></h2><p>There are few options available on official site <a href=\"https://deno.land/\">deno.land/</a>.</p><p>We are gonna install it using Power-shell command:</p><pre><code>iwr https://deno.land/x/install/install.ps1 -useb | iex</code></pre><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://digitalpress.fra1.cdn.digitaloceanspaces.com/omtmgjm/2020/02/image-2.png\" class=\"kg-image\"><figcaption>Message after Deno is successfully installed</figcaption></figure><p>The Deno.exe  executable file is stored in <em>C:\\Users\\&lt;username&gt;\\.deno\\bin\\deno.exe</em> by default.</p><blockquote><br>In macOS or Linux <em>$HOME/.local/bin</em></blockquote><p><br>Following command will give info about Deno, V8 Engine &amp; Typescript version installed on your machine.</p><pre><code>deno --version</code></pre><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://digitalpress.fra1.cdn.digitaloceanspaces.com/omtmgjm/2020/02/image-4.png\" class=\"kg-image\"><figcaption>Deno versions</figcaption></figure><h2 id=\"hello-world-writing-first-program-with-deno-\">Hello World - Writing first program with Deno.<br></h2><p>Open up your terminal and just type following:</p><pre><code>deno https://deno.land/std/examples/welcome.ts</code></pre><p>will result into:</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://digitalpress.fra1.cdn.digitaloceanspaces.com/omtmgjm/2020/02/image-5.png\" class=\"kg-image\"><figcaption>Executing a remote .ts file</figcaption></figure><p>What happened here is we execute a code present in a remote file, AWESOME!!</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://digitalpress.fra1.cdn.digitaloceanspaces.com/omtmgjm/2020/02/image-8.png\" class=\"kg-image\"><figcaption>Content of https://deno.land/std/examples/welcome.ts</figcaption></figure><p>Now let's execute a local code:<br><br>Create a file inside \"C:\\deno\" &gt; index.ts (it could have .js extension for a javascript file)</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://digitalpress.fra1.cdn.digitaloceanspaces.com/omtmgjm/2020/02/image-11.png\" class=\"kg-image\"><figcaption>Opening index.ts in Visual Studio Code</figcaption></figure><p>Now using terminal execute following command:</p><pre><code>deno index.ts\n\nor\n\ndeno index.js</code></pre><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://digitalpress.fra1.cdn.digitaloceanspaces.com/omtmgjm/2020/02/image-13.png\" class=\"kg-image\"><figcaption>Hello World!! with index.ts</figcaption></figure><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://digitalpress.fra1.cdn.digitaloceanspaces.com/omtmgjm/2020/02/image-14.png\" class=\"kg-image\"><figcaption>Hello World!! with index.js</figcaption></figure><h2 id=\"setting-up-an-http-server-\">Setting up an http-server.</h2><p>Deno provides an http-server i.e. </p><pre><code>https://deno.land/std@v0.30.0/http/server.ts</code></pre><p>As provided on official website example, here's how you can create a running server on your machine:<br><br><strong>Code:</strong></p><pre><code>import { serve } from \"https://deno.land/std@v0.30.0/http/server.ts\";\n\nconst s = serve({ port: 5000 });\n\nconsole.log(\"Listening on http://localhost:5000/\");\n\nfor await (const req of s) {\n  req.respond({ body: \"Hello World!!\" });\n}\n</code></pre><p>just copy paste above code into your <em><strong>\"index.ts\"</strong></em> file and run it with following command.</p><pre><code>deno -A index.ts</code></pre><blockquote>-A flag provides all the necessary permission for your app to run on your machine</blockquote><p></p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://digitalpress.fra1.cdn.digitaloceanspaces.com/omtmgjm/2020/02/image-15.png\" class=\"kg-image\"><figcaption>GET request on server running on localhost:5000</figcaption></figure><h3 id=\"using-oak-middle-ware-with-deno-http-server-\">Using Oak middle-ware with deno http-server.<br></h3><p>Oak is a middleware framework for Deno's net server, more on this can be found on GitHub repo: <a href=\"https://github.com/oakserver/oak\">https://github.com/oakserver/oak</a><br></p><p>NOW let's create a GET &amp; POST endpoint by altering our <em><strong>\"index.ts\"</strong></em> code with following:</p><figure class=\"kg-card kg-code-card\"><pre><code>import { Application, Router } from \"https://deno.land/x/oak/mod.ts\";\n\nconst router = new Router();\n\nrouter.get(\"/\", context =&gt; {\n  context.response.body = \"Hello World!\";\n});\n\nrouter.post(\"/\", context =&gt; {\n  context.response.body = \"You have made a POST request!\";\n});\n\nconst app = new Application();\n\napp.use(router.routes());\napp.use(router.allowedMethods());\n\nconst server = app.listen({ port: 5000 });\n\nconsole.log(\"Listening on http://localhost:5000/\");</code></pre><figcaption>Here we are spinning of an http server with Oak</figcaption></figure><p><strong>Result:</strong></p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://digitalpress.fra1.cdn.digitaloceanspaces.com/omtmgjm/2020/02/image-15.png\" class=\"kg-image\"><figcaption>GET request on server running on localhost:5000</figcaption></figure><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://digitalpress.fra1.cdn.digitaloceanspaces.com/omtmgjm/2020/02/image-16.png\" class=\"kg-image\"><figcaption>POST request on server running on localhost:5000</figcaption></figure><p>So, that was it regarding installing Deno, writing first 'Hello-World\" program and setting up an http-server along with Oak middleware.<br><br><br><strong>Resources: </strong><br>Deno – a better Node.js? | Krzysztof Piechowicz : <a href=\"https://www.youtube.com/watch?v=mzfw9TwBiQc&amp;t=616s\">https://www.youtube.com/watch?v=mzfw9TwBiQc&amp;t=616s</a><br><br>Deno Examples: <a href=\"https://deno.land/#example\">https://deno.land/#example</a><br><br>Oak Middleware: <a href=\"https://github.com/oakserver/oak\">https://github.com/oakserver/oak</a><br><br><br><strong>Original article on</strong>: https://blog.kushalbhalaik.xyz/getting-started-with-deno/<br></p>","url":"https://admin.kushalbhalaik.xyz/getting-started-with-deno/","uuid":"ed770264-2323-44aa-9840-799d6efae2ce","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5e47e4121f0c8f0001d72ee3"}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"deno","limit":5,"skip":0,"numberOfPages":1,"humanPageNumber":1,"prevPageNumber":null,"nextPageNumber":null,"previousPagePath":null,"nextPagePath":null}}}